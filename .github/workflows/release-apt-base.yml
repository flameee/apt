on:
  push:
    branches:
      - apt-base

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug Branch
        run: echo "Push event on branch ${{ github.ref }}"

      - name: Get or create tag (Atomic)
        id: get_tag
        run: |
          TAG="apt-base-latest"
          # ... (codice per la gestione atomica del tag, come nella risposta precedente)

      - name: Get existing release ID (if any)
        id: get_release_id
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const tag = '${{ steps.get_tag.outputs.tag }}';
            return github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag,
            }).then(result => result.data.id).catch(error => {
                if (error.status === 404) {
                    return null; // Release doesn't exist
                }
                throw error; // Re-throw other errors
            });

      - name: Create or update Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          body: Aggiornamento della release.
          draft: false
          prerelease: false
          release_id: ${{ steps.get_release_id.outputs.result }} # <--- ID per l'update
        if: github.event_name == 'push'

      - name: Debug Release creation result
        if: steps.create_release.outcome == 'failure'
        run: |
          echo "Release update/creation failed. Check the logs for details."
          cat $GITHUB_WORKSPACE/.github/workflows/release.yml
          git status