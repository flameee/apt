on:
  push:
    branches:
      - apt-base

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug Branch
        run: echo "Push event on branch ${{ github.ref }}"

      - name: Get or create tag (Atomic)
        id: get_tag
        run: |
          TAG="apt-base-latest"
          echo "Trying to find/create tag: $TAG"

          # Tentativo atomico di push dei tag (crea il tag se non esiste):
          if git push --tags origin $TAG; then # Tenta di pushare il tag
            echo "Tag $TAG created or already existed and pushed successfully."
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          elif [[ $(git ls-remote --tags origin $TAG | wc -l) -eq 0 ]]; then # Check remoto se il push fallisce perche non esiste
            echo "Tag $TAG not found remotely. Creating and pushing it."
            git tag $TAG  # Crea il tag localmente
            git push --tags origin $TAG # Tenta di pushare di nuovo
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          else
            echo "Tag $TAG already exists remotely. Skipping creation."
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          fi
          echo "Tag value: ${{ steps.get_tag.outputs.tag }}"

      - name: Create or update Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          body: |
            Aggiornamento della release.
          draft: false
          prerelease: false
          update_if_exists: true # La chiave per l'aggiornamento

      - name: Debug Release creation result
        if: steps.create_release.outcome == 'failure'
        run: |
          echo "Release update/creation failed. Check the logs for details."
          cat $GITHUB_WORKSPACE/.github/workflows/release.yml
          git status