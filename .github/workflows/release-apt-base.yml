on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug Branch
        run: echo "Push event on branch ${{ github.ref }}"

      - name: Get or create tag (Atomic)
        id: get_tag
        run: |
          TAG="apt-base-latest"
          echo "Trying to find/create tag: $TAG"

          if git push --tags origin $TAG; then
            echo "Tag $TAG created or already existed and pushed successfully."
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          elif [[ $(git ls-remote --tags origin $TAG | wc -l) -eq 0 ]]; then
            echo "Tag $TAG not found remotely. Creating and pushing it."
            git tag $TAG
            git push --tags origin $TAG
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          else
            echo "Tag $TAG already exists remotely. Skipping creation."
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          fi
          echo "Tag value: ${{ steps.get_tag.outputs.tag }}"

      - name: Update or Create Release
        id: create_or_update_release
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const tag = '${{ steps.get_tag.outputs.tag }}';
            const releaseName = `Release ${tag}`;

            try {
              const release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tag,
              });

              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.data.id,
                tag_name: tag,
                name: releaseName,
                body: 'Aggiornamento della release.',
              });

              console.log(`Release ${tag} updated.`);
              return release.data.id;

            } catch (error) {
              if (error.status === 404) {
                const newRelease = await github.rest.repos.createRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  tag_name: tag,
                  name: releaseName,
                  body: 'Nuova release.',
                  draft: false,
                  prerelease: false,
                });

                console.log(`Release ${tag} created.`);
                return newRelease.data.id;
              }

              throw error;
            }
        if: github.event_name == 'push'

      - name: Debug Release creation result
        if: steps.create_or_update_release.outcome == 'failure'
        run: |
          echo "Release update/creation failed. Check the logs for details."
          cat $GITHUB_WORKSPACE/.github/workflows/release.yml
          git status